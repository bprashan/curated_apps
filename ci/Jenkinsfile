properties([parameters([choice(choices: ['all', 'jenkins', 'attestation', 'non_attestation',
'redis_attestation', 'pytorch_attestation', 'redis_non_attestation',
'pytorch_non_attestation', 'redis', 'pytorch', 'bash', 'bash_attestation', 'bash_non_attestation'], name: 'run'),
string(description: 'enter the specific pytest to execute', name: 'run_specific_test'),
string(description: 'Provide either Gramine repo branch or tag, by default automation is assigned with v1.3.1 tag', name: 'gramine_commit', trim: true),
string(defaultValue: 'graphene_dcap', description: '''graphene_dcap_server [attestation test]
graphene_dcap [attestation test]
graphene_wcity_02 [non attestation test]''', name: 'nodeLabel'),
string(description: 'If you want to change gsc commit, provide it here', name: 'gsc_commit', trim: true),
string(description: 'If you want to change contrib repo, provide it here', name: 'contrib_repo', trim: true),
string(description: 'If you want to change contrib commit, provide it here', name: 'contrib_branch', trim: true)])])

node("$nodeLabel") {
    checkout scm
    test_executor = load 'ci/libs/utils.pipeline'

    try {
        test_executor.initialize()
        test_executor.runtest()
    } catch (Exception e){
        currentBuild.result = "FAILURE"
    } finally {
        test_executor.storeartifacts()
        test_executor.cleanup()
    }
}