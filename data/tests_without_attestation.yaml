---
default_input_args:
  start:
  signing_key_path: test_config/enclave-key.pem
  attestation:
  runtime_args_text:
  runtime_variable_list:
  encrypted_files_path:
  end:
  signing_key_password:
  docker_flags: --rm

test_redis_default:
  docker_image: redis redis:7.0.10

test_redis_default_with_debug:
  docker_image: redis redis:7.0.10
  debug_mode: y

test_redis_unknown_docker_image:
  docker_image: redis redis:unknown_version
  expected_screen: signing_page
  expected_output_console: "Could not fetch `redis:unknown_version` image from DockerHub"
  end_test: signing_key_path

test_redis_test_option:
  docker_image: redis redis:7.0.10
  test_option: y

test_redis_with_test_sign_key:
  docker_image: redis redis:7.0.10
  signing_key_path : test

test_redis_with_test_sign_key_debug:
  docker_image: redis redis:7.0.10
  signing_key_path : test
  debug_mode: y

test_redis_with_runtime_variables:
  docker_image: redis redis:7.0.10
  runtime_variable_list: -e name="curator_app" -e version="1.2"

test_redis_empty_test_key:
  docker_image: redis redis:7.0.10
  signing_key_path : test_config/empty-key
  expected_output_infile: "unable to load Private Key"

test_redis_wrong_key_path:
  docker_image: redis redis:7.0.10
  signing_key_path : no_test_key
  end_test: signing_key_path
  expected_screen: signing_page
  expected_output_console: "no_test_key file does not exist."

test_redis_ra_wrong_option:
  docker_image: redis redis:7.0.10
  attestation: k
  end_test: attestation
  expected_screen: attestation_page
  expected_output_console: "Invalid option specified"

test_redis_ev_invalid_input_1:
  docker_image: redis redis:7.0.10
  runtime_variable_list: -e name="Xyz" -e -e age="20"

test_redis_ev_dict:
  docker_image: redis redis:7.0.10
  runtime_variable_list: {name="Xyz",age="20"}
  expected_screen: docker_flags
  expected_output_console: 'Invalid string specified'

test_redis_ev_invalid_input_2:
  docker_image: redis redis:7.0.10
  runtime_variable_list: -e name="Xyz" -e age=

test_bash_default:
  docker_image: bash ubuntu_20_04-bash:latest
  create_local_image: y
  runtime_variable_list: -e APP_NAME="Curated Apps"
  workload_result: "Curated Apps"

test_bash_runtime_args:
  docker_image: bash ubuntu_20_04-bash:latest
  create_local_image: y
  runtime_args_text: free

test_commentary_sequence:
  docker_image: redis redis:7.0.10
  expected_screen: signing_page
  expected_output_console: "1. Command-line arguments(.*)2. Environment variables(.*)3. Additional docker run flags(.*)4. Encrypted files and key provisioning(.*)5. Remote Attestation(.*)6. Enclave signing(.*)7. Generation of the final curated images(.*)8. Generation of docker run commands"
  end_test: signing_key_path

test_redis_protected_signing_key:
  docker_image: redis redis:7.0.10
  signing_key_path: test_config/protected-enclave-key.pem
  signing_key_password: test@123

test_redis_signing_key_no_input:
  docker_image: redis redis:7.0.10
  signing_key_path:
  expected_screen: signing_page
  expected_output_console: "Please provide a valid input"
  end_test: signing_key_path

test_redis_with_sign_key_special_character:
  docker_image: redis redis:7.0.10
  signing_key_path : .
  expected_screen: signing_page
  expected_output_console: "Error: . file does not exist"
  end_test: signing_key_path

test_sklearn_default:
  docker_image: sklearn sklearn-base:latest
  create_local_image: y

test_sklearn_default_with_debug:
  docker_image: sklearn sklearn-base:latest
  debug_mode: y
  create_local_image: y

test_sklearn_test_option:
  docker_image: sklearn sklearn-base:latest
  create_local_image: y
  test_option: y

test_tfserving_default:
  docker_image: tensorflow-serving tf-serving-base:latest
  create_local_image: y
  runtime_args_text: --model_name="resnet" --model_base_path="/models/resnet"

test_tfserving_default_with_debug:
  docker_image: tensorflow-serving tf-serving-base:latest
  debug_mode: y
  runtime_args_text: --model_name="resnet" --model_base_path="/models/resnet"
  create_local_image: y

test_tfserving_test_option:
  docker_image: tensorflow-serving tf-serving-base:latest
  create_local_image: y
  runtime_args_text: --model_name="resnet" --model_base_path="/models/resnet"
  test_option: y

test_tfserving_mnist:
  docker_image: tensorflow-serving tf-serving-base:latest
  create_local_image: y
  runtime_args_text: --model_name="mnist" --model_base_path="/models/mnist"

test_tfserving_half_plus_two:
  docker_image: tensorflow-serving tf-serving-base:latest
  create_local_image: y
  runtime_args_text: --model_name="half_plus_two" --model_base_path="/models/half_plus_two"

test_redis_docker_flags:
  docker_image: redis redis:7.0.10
  docker_flags: --cidfile="container_id.log"
  flag_validation: --cidfile="container_id.log"

test_redis_docker_invalid_flag_string:
  docker_image: redis redis:7.0.10
  end_test: encrypted_files_path
  expected_screen: encryption_key_page
  docker_flags: "--name docker_container, --net=host"
  expected_output_console: 'Invalid string specified'

test_pytorch_test_option:
  docker_image: pytorch pytorch-encrypted:latest
  create_local_image: y
  test_option: y

test_pytorch_default:
  docker_image: pytorch pytorch-encrypted:latest
  create_local_image: y
  encryption_key: workloads/pytorch/base_image_helper/encryption_key
  encrypted_files_path: classes.txt:input.jpg:alexnet-pretrained.pt:result.txt

test_mysql_default:
  docker_image: mysql mysql:8.0.34-debian
  runtime_args_text: --datadir /var/run/test_db_encrypted
  docker_flags: -v /var/run/test_db_encrypted:/var/run/test_db_encrypted
  encryption_key: workloads/mysql/base_image_helper/encryption_key
  encrypted_files_path: /var/run/test_db_encrypted
  pre_workload_setup: y

test_mysql_test_option:
  docker_image: mysql mysql:8.0.34-debian
  runtime_args_text: --datadir /var/run/test_db_encrypted
  docker_flags: -v /var/run/test_db_encrypted:/var/run/test_db_encrypted
  encryption_key: workloads/mysql/base_image_helper/encryption_key
  encrypted_files_path: /var/run/test_db_encrypted
  pre_workload_setup: y
  test_option: y

test_mysql_with_test_sign_key:
  docker_image: mysql mysql:8.0.34-debian
  runtime_args_text: --datadir /var/run/test_db_encrypted
  docker_flags: -v /var/run/test_db_encrypted:/var/run/test_db_encrypted
  encryption_key: workloads/mysql/base_image_helper/encryption_key
  encrypted_files_path: /var/run/test_db_encrypted
  pre_workload_setup: y
  signing_key_path : test

test_mysql_default_with_debug:
  docker_image: mysql mysql:8.0.34-debian
  runtime_args_text: --datadir /var/run/test_db_encrypted
  docker_flags: -v /var/run/test_db_encrypted:/var/run/test_db_encrypted
  encryption_key: workloads/mysql/base_image_helper/encryption_key
  encrypted_files_path: /var/run/test_db_encrypted
  pre_workload_setup: y
  debug_mode: y

test_mariadb_default:
  docker_image: mariadb mariadb:11.0.3-jammy
  runtime_args_text: --datadir /mnt/tmpfs/test_db_encrypted
  docker_flags: -v /mnt/tmpfs/test_db_encrypted:/mnt/tmpfs/test_db_encrypted
  encryption_key: workloads/mariadb/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/test_db_encrypted
  pre_workload_setup: y

test_mariadb_test_option:
  docker_image: mariadb mariadb:11.0.3-jammy
  runtime_args_text: --datadir /mnt/tmpfs/test_db_encrypted
  docker_flags: -v /mnt/tmpfs/test_db_encrypted:/mnt/tmpfs/test_db_encrypted
  encryption_key: workloads/mariadb/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/test_db_encrypted
  pre_workload_setup: y
  test_option: y

test_mariadb_with_test_sign_key:
  docker_image: mariadb mariadb:11.0.3-jammy
  runtime_args_text: --datadir /mnt/tmpfs/test_db_encrypted
  docker_flags: -v /mnt/tmpfs/test_db_encrypted:/mnt/tmpfs/test_db_encrypted
  encryption_key: workloads/mariadb/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/test_db_encrypted
  pre_workload_setup: y
  signing_key_path : test

test_mariadb_default_with_debug:
  docker_image: mariadb mariadb:11.0.3-jammy
  runtime_args_text: --datadir /mnt/tmpfs/test_db_encrypted
  docker_flags: -v /mnt/tmpfs/test_db_encrypted:/mnt/tmpfs/test_db_encrypted
  encryption_key: workloads/mariadb/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/test_db_encrypted
  pre_workload_setup: y
  debug_mode: y

test_memcached_default:
  docker_image: memcached ubuntu/memcached:1.5-20.04_beta

test_memcached_with_test_sign_key:
  docker_image: memcached ubuntu/memcached:1.5-20.04_beta
  signing_key_path : test

test_memcached_with_test_sign_key_debug:
  docker_image: memcached ubuntu/memcached:1.5-20.04_beta
  signing_key_path : test
  debug_mode: y

test_memcached_with_test_option:
  docker_image: memcached ubuntu/memcached:1.5-20.04_beta
  test_option: y

test_memcached_default_with_debug:
  docker_image: memcached ubuntu/memcached:1.5-20.04_beta
  debug_mode: y

test_ovms_default:
  docker_image: openvino-model-server openvino/model_server:2023.0
  runtime_args_text: --model_path /mnt/tmpfs/model_encrypted --model_name face-detection --port 9000 --shape auto
  docker_flags: -u 0:0 -p 9000:9000 -v /mnt/tmpfs/model_encrypted:/mnt/tmpfs/model_encrypted
  encryption_key: workloads/openvino-model-server/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/model_encrypted
  pre_workload_setup: y

test_ovms_with_test_sign_key:
  docker_image: openvino-model-server openvino/model_server:2023.0
  runtime_args_text: --model_path /mnt/tmpfs/model_encrypted --model_name face-detection --port 9000 --shape auto
  docker_flags: -u 0:0 -p 9000:9000 -v /mnt/tmpfs/model_encrypted:/mnt/tmpfs/model_encrypted
  encryption_key: workloads/openvino-model-server/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/model_encrypted
  pre_workload_setup: y
  signing_key_path : test

test_ovms_with_test_sign_key_debug:
  docker_image: openvino-model-server openvino/model_server:2023.0
  runtime_args_text: --model_path /mnt/tmpfs/model_encrypted --model_name face-detection --port 9000 --shape auto
  docker_flags: -u 0:0 -p 9000:9000 -v /mnt/tmpfs/model_encrypted:/mnt/tmpfs/model_encrypted
  encryption_key: workloads/openvino-model-server/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/model_encrypted
  pre_workload_setup: y
  signing_key_path : test
  debug_mode: y

test_ovms_with_test_option:
  docker_image: openvino-model-server openvino/model_server:2023.0
  runtime_args_text: --model_path /mnt/tmpfs/model_encrypted --model_name face-detection --port 9000 --shape auto
  docker_flags: -u 0:0 -p 9000:9000 -v /mnt/tmpfs/model_encrypted:/mnt/tmpfs/model_encrypted
  encryption_key: workloads/openvino-model-server/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/model_encrypted
  pre_workload_setup: y
  test_option: y

test_ovms_default_with_debug:
  docker_image: openvino-model-server openvino/model_server:2023.0
  runtime_args_text: --model_path /mnt/tmpfs/model_encrypted --model_name face-detection --port 9000 --shape auto
  docker_flags: -u 0:0 -p 9000:9000 -v /mnt/tmpfs/model_encrypted:/mnt/tmpfs/model_encrypted
  encryption_key: workloads/openvino-model-server/base_image_helper/encryption_key
  encrypted_files_path: /mnt/tmpfs/model_encrypted
  pre_workload_setup: y
  debug_mode: y
